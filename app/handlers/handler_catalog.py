from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext

from ..views import msg_product
from ..utils.states_form import StatesUser
from ..bot_settings import YandexSplitBot, settings
from ..data_base.requests import *
from ..keyboards.inline_markup import categories_menu, catalog_menu, buy_menu


router = Router(name=__name__)


@router.message(F.text == 'üõí –ö—É–ø–∏—Ç—å')
async def send_category(message: Message, state: FSMContext) -> None:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "üõí –ö—É–ø–∏—Ç—å".
    –ü—Ä–∏—Å—ã–ª–∞–µ—Ç –∫–∞—Ç–∞–ª–æ–≥ –∏–≥—Ä –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM 'choice_product' –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞.

    :param message: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Message.
    :param state: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ FSMContext.
    """

    await message.delete()

    await message.answer(text='<b>–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π</b>', reply_markup=categories_menu())

    await state.set_state(state=StatesUser.choice_game)


@router.callback_query(F.data.startswith('category_'))
async def send_catalog(callback: CallbackQuery, state: FSMContext) -> None:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞—Ç–∞–ª–æ–≥ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM 'choice_product' –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞.

    :param callback: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ CallbackQuery.
    :param state: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ FSMContext.
    """

    await callback.message.delete()

    await callback.message.answer(text='<b>–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π</b>', reply_markup=catalog_menu(await select_catalog()))

    await state.set_state(state=StatesUser.choice_product)


@router.callback_query(StatesUser.choice_product)
async def send_product(callback: CallbackQuery, state: FSMContext) -> None:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∏–≥—Ä–µ.
    –ü—Ä–∏—Å—ã–ª–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ç–æ–≤–∞—Ä–µ –∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –º–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è —Å —Ç–æ–≤–∞—Ä–æ–º,
    –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM "buy_product".

    :param callback: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ CallbackQuery.
    :param state: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ FSMContext.
    """

    await callback.message.delete()

    product = await select_product(int(callback.data))

    await callback.message.answer(text=msg_product(product.title_product, product.Cost), reply_markup=buy_menu())

    await state.update_data(price=product.Cost, product=product.title_product)
    await state.set_state(state=StatesUser.buy_product)


@router.callback_query(StatesUser.buy_product)
async def buy_product_game(callback: CallbackQuery, state: FSMContext) -> None:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ö—É–ø–∏—Ç—å üí≥".
    –°–ø–∏—Å—ã–≤–∞–µ—Ç –¥–µ–Ω—å–≥–∏ —Å –±–∞–ª–∞–Ω—Å–∞ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã.
    –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ, –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–º –±–∞–ª–∞–Ω—Å–µ,
    –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å.

    :param callback: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ CallbackQuery.
    :param state: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ FSMContext.
    """

    await callback.message.delete()

    data = await state.get_data()
    product = data['product']
    price = data['price']

    user = await select_profile(user_id=callback.from_user.id)

    if user.balance >= price:
        await update_balance(user_id=callback.from_user.id, balance=user.balance - price)

        await callback.message.answer(text='–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –° –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –±–æ—Ç–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è...')

        await YandexSplitBot.send_message(
            chat_id=settings.ADMIN_ID,
            text=f'üîî <i>–ù–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞ üõç</i>\n\n'
                 f'<b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <a href="tg:user?id={user.user_id}">{callback.from_user.full_name}</a>\n'
                 f'<b>üÜî Telegram:</b> <ins>{user.user_id}</ins>\n\n'
                 f'<b>üì¶ –¢–æ–≤–∞—Ä:</b> {product}\n'
                 f'<b>üí∞ –°—É–º–º–∞:</b> {price} ‚ÇΩ\n\n'
        )
    else:
        await callback.message.answer(
            text=f'‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ!\n\n'
                 f'üí∞ –ë–∞–ª–∞–Ω—Å: {user.balance} ‚ÇΩ\n\n',
        )
