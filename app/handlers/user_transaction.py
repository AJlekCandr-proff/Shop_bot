import re
from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from ..bot_settings import YandexSplitBot, settings
from ..data_base.requests import update_balance, select_profile
from ..keyboards.inline_markup import accept_menu, connection_menu
from ..utils.states_form import StatesUser
from ..views import msg_payment, msg_check_payment


router = Router(name=__name__)


@router.message(F.text == 'üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å')
async def send_payment(message: Message, state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å".
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∂–µ–ª–∞–µ–º—É—é —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    :param message: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Message.
    :param state: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ FSMContext.
    """

    await message.answer(text='–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é: ')

    await state.set_state(StatesUser.get_sum)


@router.message(StatesUser.get_sum)
async def get_sum_to_payment(message: Message, state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É–º–º—É –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∏ –µ—Å–ª–∏ —ç—Ç–æ —Ç–∞–∫ (—Å—É–º–º–∞ –≤–∞–ª–∏–¥–Ω–∞),
    —Ç–æ —Å–∫–∏–¥—ã–≤–∞–µ—Ç —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —á–µ–∫.

    :param message: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Message.
    :param state: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ FSMContext.
    """

    sum = message.text

    if re.fullmatch(r'\d+', sum):
        await message.answer(text=msg_payment(float(message.text)))

        await state.update_data(sum=message.text)
        await state.set_state(StatesUser.check_pay)

    else:
        await message.answer(text='‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–±—Ä–∞–Ω–∞ —Å—É–º–º–∞. –í–≤–µ–¥–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ: ')

        await state.set_state(StatesUser.get_sum)


@router.message(F.photo, StatesUser.check_pay)
async def check_screen_admin(message: Message, state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —á–µ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü—Ä–∏—Å—ã–ª–∞–µ—Ç –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞.
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —á–µ–∫–∞.

    :param message: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Message.
    :param state: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ FSMContext.
    """

    data = await state.get_data()

    await YandexSplitBot.send_photo(
        chat_id=settings.ADMIN_ID,
        photo=message.photo[-1].file_id,
        caption=msg_check_payment(user_id=message.from_user.id, name=message.from_user.full_name, sum=data['sum']),
        reply_markup=accept_menu()
    )

    await message.answer(text='–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ üïì', reply_markup=connection_menu(settings.ADMIN_URL))

    await state.update_data(user_id=message.from_user.id)
    await state.set_state(StatesUser.get_confirmation)


@router.callback_query(F.data == 'accept_payment', StatesUser.get_confirmation)
async def set_balance_user(callback: CallbackQuery, state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úÖ".
    –ó–∞—á–∏—Å–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ –¥–µ–Ω—å–≥–∏ –Ω–∞ –±–∞–ª–∞–Ω—Å.

    :param callback: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ CallbackQuery.
    :param state: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ FSMContext.
    """

    data = await state.get_data()
    user = await select_profile(data['user_id'])

    await update_balance(user_id=user.user_id, balance=user.balance + float(data['sum']))

    await callback.message.answer(text='<b>–î–µ–Ω—å–≥–∏ –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.</b>')

    await YandexSplitBot.send_message(chat_id=user.user_id, text='<b>–î–µ–Ω—å–≥–∏ –∑–∞—á–∏—Å–ª–µ–Ω—ã –í–∞–º –Ω–∞ –±–∞–ª–∞–Ω—Å!</b>')
